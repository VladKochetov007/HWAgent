#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ—Ç–æ–∫–æ–≤—ã—Ö –º—ã—Å–ª–µ–π –∞–≥–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ WebSocket
"""

import socketio
import asyncio
import time
import json

class ThoughtStreamingDemo:
    def __init__(self):
        self.sio = socketio.AsyncClient()
        self.session_id = None
        self.setup_event_handlers()
        
    def setup_event_handlers(self):
        @self.sio.event
        async def connect():
            print("üîó –ü–æ–¥–∫–ª—é—á–µ–Ω –∫ —Å–µ—Ä–≤–µ—Ä—É")
            
        @self.sio.event
        async def disconnect():
            print("‚ùå –û—Ç–∫–ª—é—á–µ–Ω –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
            
        @self.sio.event
        async def session_joined(data):
            print(f"‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Å—Å–∏–∏: {data['session_id']}")
            
        @self.sio.event
        async def thought_stream(data):
            print(f"üí≠ –ü–æ—Ç–æ–∫ –º—ã—Å–ª–µ–π: {data['type']} - {data['content'][:100]}...")
            
        @self.sio.event
        async def stream_start(data):
            print("üöÄ –ù–∞—á–∞–ª–æ –ø–æ—Ç–æ–∫–∞ –æ—Ç–≤–µ—Ç–∞")
            
        @self.sio.event
        async def stream_data(data):
            print(f"üìù –î–∞–Ω–Ω—ã–µ –ø–æ—Ç–æ–∫–∞: {data.get('content', '')[:50]}...")
            
        @self.sio.event
        async def stream_complete(data):
            print("‚úÖ –ü–æ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω")
            
    async def connect_and_test(self):
        try:
            # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
            await self.sio.connect('http://localhost:5000')
            
            # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏
            response = await self.create_session()
            if not response:
                return
                
            self.session_id = response['session_id']
            print(f"üìã –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Å—Å–∏—è: {self.session_id}")
            
            # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ —Å–µ—Å—Å–∏–∏
            await self.sio.emit('join_session', {'session_id': self.session_id})
            await asyncio.sleep(1)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
            test_message = "–°–æ–∑–¥–∞–π —Ñ–∞–π–ª —Å –∫–æ–¥–æ–º Python –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è –∏ –æ–±—ä—è—Å–Ω–∏ –∫–∞–∂–¥—ã–π —à–∞–≥"
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {test_message}")
            
            await self.sio.emit('send_message', {
                'session_id': self.session_id,
                'message': test_message,
                'streaming': True
            })
            
            # –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
            print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∞–≥–µ–Ω—Ç–∞...")
            await asyncio.sleep(30)  # –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            await self.sio.disconnect()
            
    async def create_session(self):
        import aiohttp
        async with aiohttp.ClientSession() as session:
            async with session.post('http://localhost:5000/api/sessions') as resp:
                if resp.status == 200:
                    return await resp.json()
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏: {resp.status}")
                    return None

async def main():
    print("üß† –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ—Ç–æ–∫–æ–≤—ã—Ö –º—ã—Å–ª–µ–π HWAgent")
    print("=" * 50)
    
    demo = ThoughtStreamingDemo()
    await demo.connect_and_test()

if __name__ == "__main__":
    asyncio.run(main()) 